<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on ziyu&#39;s blog</title>
    <link>https://taoziyu97.github.io/blog/</link>
    <description>Recent content in Blog on ziyu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://taoziyu97.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>博客优化计划</title>
      <link>https://taoziyu97.github.io/blog/2021-6-7_optimization_of_the_blog/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-6-7_optimization_of_the_blog/</guid>
      <description>引言 分为功能改进、美观改进。
博客功能改进   个人博客归档（已完成）
  date的时间更换成自动化填充，每次手动填写很麻烦
  搜索中文优化，目前速度较慢
  更改归档页面时间0001
  每篇博文的分享页面超链接到对应网址
      删除不需要的语言支持，只保留英文和中文
  增加评论功能
      分类更加细化，最好能有层层分类
  ABOUT页面填充自己的个人信息
  翻页添加页码
  博客整体美观   每个博文的图片选取大小合适的
  标题的英文或中文的字距过大，比如下图的 引言 和 博客功能改进
    </description>
    </item>
    
    <item>
      <title>hugo博客配置归档页面</title>
      <link>https://taoziyu97.github.io/blog/2021-6-7_%E9%85%8D%E7%BD%AE%E5%BD%92%E6%A1%A3/</link>
      <pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-6-7_%E9%85%8D%E7%BD%AE%E5%BD%92%E6%A1%A3/</guid>
      <description>引言 hugo没有自带的归档设置，需要手动添加。
操作步骤   在taozy_blog/layouts/_default/目录下创建 archives.html 文件
  将taozy_blog/layouts/_default/目录下的 single.html 内容复制进 archives.html 文件（single.html的格式就是每篇博文的格式，也可以采用主题的contact.html的格式或者about.html的格式）
  找到archives.html 文件中的{{ .Content }} 替换为下面的内容:
  {{ range (.Site.RegularPages.GroupByDate &amp;#34;2006&amp;#34;) }} &amp;lt;h3&amp;gt;{{ .Key }}&amp;lt;/h3&amp;gt; &amp;lt;ul class=&amp;#34;archive-list&amp;#34;&amp;gt; {{ range (where .Pages &amp;#34;Type&amp;#34; &amp;#34;blog&amp;#34;) }} &amp;lt;li&amp;gt; {{ .PublishDate.Format &amp;#34;2006-01-02&amp;#34; }} -&amp;gt; &amp;lt;a href=&amp;#34;{{ .RelPermalink }}&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; {{ end }} &amp;lt;/ul&amp;gt; {{ end }} 对上述代码进行解读:
 归档目录  Pages &amp;ldquo;Type&amp;rdquo; &amp;ldquo;blog&amp;quot;即归档目录设置为content/blog/下的内容，如果去掉blog，引号内留空，就会自动归档根目录下的文件，也就是content目录的文件。
 可选归档时间  .</description>
    </item>
    
    <item>
      <title>ERROR: Could not find a version that satisfies the requirement torch==1.5.1 </title>
      <link>https://taoziyu97.github.io/blog/2021-6-4_torch1.5.1_error/</link>
      <pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-6-4_torch1.5.1_error/</guid>
      <description>引言 为了在集群上跑1000个模拟样本的SigprofilerExtractor工具，在集群上自己新建的环境里安装，解决安装bug，并成功使用。
解决bug思路   发现依赖torch1.5.1版本
  通过pip install安装失败
  使用whl安装发现没有对应python3.9的版本
  根据版本推测1.5.1不能在python3.9安装
  重建新环境，安装python3.8，进而安装1.5.1
  成功
  具体实施 使用sigprofilerextractor发现报错如下：
ERROR: Could not find a version that satisfies the requirement torch==1.5.1 (from sigprofilerextractor) (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2, 1.7.1, 1.8.0, 1.8.1) ERROR: No matching distribution found for torch==1.5.1 需要安装torch1.5.1版本，直接conda安装和pip安装都失败了 另外提示中表明可以通过source使用whl安装，网址如下：
Cannot install torch just with pip, try again with source from https://download.pytorch.org/whl/torch_stable.html Looking in links: https://download.</description>
    </item>
    
    <item>
      <title>Excel数字长度超13位尾号变0</title>
      <link>https://taoziyu97.github.io/blog/2021-5-27_excel_number/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-5-27_excel_number/</guid>
      <description>引言 小雨毕业填各种表格，发现数字很长的时候会直接用0替代超长位数的数字，检索之后，给她解决了这个小问题。
操作方法 设置数字格式，在自定义中输入@
 重新输入可以发现已经可以了
  参考资料：  Excel数字长度超13位尾号变0或E+，教你这招只用一个0就能搞定  </description>
    </item>
    
    <item>
      <title>线程和进程</title>
      <link>https://taoziyu97.github.io/blog/2021-5-24_threads_and_processes/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-5-24_threads_and_processes/</guid>
      <description>引言 看了一下廖雪峰的官方网站中对多线程和多进程的讲解，写的真是又简洁又明了，结合今天workshop中zk提到的并行计算，简单汇总写个学习笔记。
操作系统可以同时执行多任务，比如同时运行浏览器、QQ和word，CPU执行代码是按照顺序一条条的执行。
操作系统执行多任务是让CPU对多个任务轮流进行交替执行，比如让浏览器执行0.1秒，让word执行0.1秒。
不管是单核还是多核的CPU，都可以同时运行多个任务，单核CPU执行任务交替进行，多核CPU在任务数量多于CPU的核数时，也是交替执行任务。
一、进程 计算机中一个任务为一个进程，浏览器时一个进程，word也是一个进程。部分进程内部需要同时执行多个子任务，比如使用word一边打字一边检查拼写，一边后台打印，子任务就是线程。
操作系统调度的最小任务单位是线程。由于一个应用程序可以有，多个进程，也可以有多个线程，实现任务的方法包括：
多进程模式（每个进程只有一个线程）：
  多线程模式（一个进程有多个线程）：
  多进程＋多线程模式（复杂度最高）：
  二、线程 线程包含在进程内，多任务既可以多进程来实现，也可以单进程内的多线程实现，也可以混合多进程和多线程。
和多线程相比，多进程的缺点在于：
 创建进程比创建线程开销大，尤其是在Windows系统上； 进程间通信比线程间通信要慢，因为线程间通信就是读写同一个变量，速度很快。  多进程的优点在于：
多进程稳定性比多线程高，因为在多进程的情况下，一个进程崩溃不会影响其他进程，而在多线程的情况下，任何一个线程崩溃会直接导致整个进程崩溃。
多线程编程的特点在于：
 经常需要读写共享数据，并且需要同步，比如播放电影时一个线程播视频，一个线程播音频，两个线程需要协调运行保持音画同步，因此多线程编程的复杂度高，调试更困难。  三、串行，并发与并行   串行 多个任务，执行时一个执行完再执行另一个。
  并发 多个线程在单个核心运行，同一时间一个线程运行，系统不停切换线程，看起来像同时运行，实际上是线程不停切换。
  并行 每个线程分配给独立的核心，线程同时运行。
  四、CPU与核心  物理核  物理核数量=cpu数(机子上装的cpu的数量)*每个cpu的核心数
 虚拟核  所谓的4核8线程，4核指的是物理核心。通过超线程技术，用一个物理核模拟两个虚拟核，每个核两个线程，总数为8线程。在操作系统看来是8个核，但是实际上是4个物理核。 通过超线程技术可以实现单个物理核实现线程级别的并行计算，但是比不上性能两个物理核。
 单核cpu和多核cpu  都是一个cpu，不同的是每个cpu上的核心数，多核cpu是多个单核cpu的替代方案，多核cpu减小了体积，同时也减少了功耗，一个核心只能同时执行一个线程。
参考资料：   廖雪峰的官方网站-多线程
  认识cpu、核与线程
  </description>
    </item>
    
    <item>
      <title>逻辑回归</title>
      <link>https://taoziyu97.github.io/blog/2021-4-11_%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-4-11_%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</guid>
      <description>引言  线性回归  假设数据包含 尺寸 和 重量 两组，根据这两组数据用 最小二乘法 拟合一条线后，我们可以做如下的事情：
  计算r平方来确定两个变量是否相关
  计算p值确定R平方是否具有统计显著性
  用于预测，如果一个新鼠标有某重量，可以根据这个线来预测其大小
  多元回归  假设用 体重 和 血容量 来预测大小，拟合曲线可做上述三个同样的事情，还可以用离散型数值来预测大小。
比较模型  进行正态回归，使用权重来预测大小。
逻辑回归 S型函数定义：
  S 型函数会产生以下曲线图：
 y&#39; 是逻辑回归模型针对特定样本的输出。 z 是 b + w1x1 + w2x2 + … wNxN w 的值是该模型学习的权重，b 是偏差。 x 的值是特定样本的特征值。  线性回归的损失函数是平方损失。逻辑回归的损失函数是对数损失函数。
  逻辑回归预测事物是对还是错，而不是连续的事物，通常用于分类，根据该目的拟合了“S”形曲线，可以给出概率。
假设这里用体重来预测肥胖，或者基因型和体重来预测肥胖，即不仅可以处理体重和年龄等连续数值，还可以处理离散数值，可以测试每个变量是否对预测肥胖有用。
 最大似然法拟合曲线  本质就是不停的计算，选择具有最大似然的曲线。
最大似然 最大似然的目标是找到使分布适合数据的最佳方法。不同类型的数据存在不同类型的分布，让分布适合数据可以让数据的使用更轻松，更通用，使它适用于相同类型的每个实验，假设称重了一批老鼠如下：
在这种情况下，认为老鼠体重可能呈正态分布，正态分布意味着：
  老鼠的重量 接近均值 或平均值。</description>
    </item>
    
    <item>
      <title>p值</title>
      <link>https://taoziyu97.github.io/blog/2021-4-07_p%E5%80%BC/</link>
      <pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-4-07_p%E5%80%BC/</guid>
      <description>介绍  p值的含义    假设存在药物A和药物B，想知道两种药物的区别？
维基百科定义：p值是假设检验中假设零假设为真时观测到至少与实际观测样本相同极端的样本的概率（似乎很拗口）。
p值是介于0-1之间的数字，量化我们相信两种药物不同的信心，p值越接近0，越相信两者不同。当p的阈值为0.05意味着，假设两种药物之间没有差异，执行多次且相同的实验，那么只有5%的实验会得出错误决定，简单来说，p值是对意外的测量。
p值能够帮助确定两种药物是否不同，但是不能告诉我们有什么不同，不管差异是都大还是小，都可以使用较小的p值，即较小的p值不代表差异是大还是小，只是代表意外的结果概率更小 。
 阈值0.05的由来  不出于逻辑或统计原因，只是科学惯例。
 术语：假阳性  指的是没有差异时却获得小的p值的情况。
 术语：假设检验（Hypothesis testing）  试图确定这些药物是否相同的想法。
 术语：零假设（Null Hypothesis）  零假设是药物相同，p值帮助我们决定是否拒绝零假设。
统计显著性检验分支 分为以下两个主要的：
  R.A.Fisher
  Neyman and Pearson
  控制假设检验的两类错误很重要：
 第一类错误  无效说成有效（取伪）。
第二类错误。  有效判成无效（弃真）。
这两种错误不能同时消除，但是可以给出一种规范的决策过程来确保第一类错误的可能性只在预先确定的比率下发生（奈曼和皮尔逊），这个比率为显著性水平α（false positive rate），可以根据经验和期望基础设置合适的α，举例：
建立10%的第一类错误率，设置α = 0.1，当希望决策更加保守，可以将α设置成0.01或更小。确定α后，可以考察哪个 检验过程 的第二类错误的比率更低。
该体系下，定义一个原假设，即“无效”的假设，再定义一个备择假设，“效应大于0”，构建一个检验去比较这两个假设，假设使用p值，如果p&amp;lt;α，拒绝原假设（费希尔的检验过程把注意力放在揭示任何一个特定的试验证据的强度），p值的大小只用来是否“拒绝原假设”。
误区 误区1：一次试验的第一类错误率为3.2%
注意，仅仅通过一次试验不能得到第一类错误率，这是由检验过程决定的，不是一次试验的结果得到的，一个检验过程得到的是一个长期的第一类错误率，不能对应到每一次试验得到的真实p值和对应的第一类错误率。
误区2：p值越小，差异越大
p值仅仅反应我们相信我们存在差异的信心，p值越小，越有信心拒绝零假设，不管差异是大还是小。
误区3：P值就是假阳性率
拒绝原假设犯错属于一类错误，错误的概率就是我们的α，p值只是我们根据一次抽样结果计算出来的值。P &amp;lt; α）表达的是在一次抽样中出现当前结果及更极端结果的可能性比我们认为的在一次抽样中不可能发生的小概率事件的概率更小。
置信区间 一个置信区间包含一个点估计，和该估计的不确定性。举例：
如果想检验这个效应量是否显著区别于0，可以构建一个95%的置信区间来检验这个区间是否包含0。</description>
    </item>
    
    <item>
      <title>使用CIBERSORTx网页版分析免疫浸润</title>
      <link>https://taoziyu97.github.io/blog/2021-4-06-cibersort/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-4-06-cibersort/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近需要对TCGA和PCAWG的表达数据进行免疫浸润水平分析，使用了R包immunedeconv,其中TCGA已经有文献的supplement给出了不同免疫浸润工具进行分析的结果，PCAWG需要自己手动分析，其中CIBERSORT在immunedeconv包中运行需要两个文件：&lt;code&gt;LM22.txt&lt;/code&gt;，&lt;code&gt;CIBERSORT.R&lt;/code&gt;，需要在官网：https://cibersortx.stanford.edu/ 进行申请。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Latex写论文</title>
      <link>https://taoziyu97.github.io/blog/2021-3-05-latex_blog/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-3-05-latex_blog/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近写文章的时候，发现修改时调整参考文献的引用，是一件非常麻烦的事情，于是找到了一种简便的方法进行调整，发现了用Latex写论文原来这么好用（据涛哥和翔哥说，word也可以自动调整引用文献顺序，而我一直不知道&amp;hellip;）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo&#43;Github&#43;阿里云域名搭建个人博客（附Netlify部署方法）</title>
      <link>https://taoziyu97.github.io/blog/2021-1-11-build_blog/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taoziyu97.github.io/blog/2021-1-11-build_blog/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近师兄和涛哥都分享了这个流程：如何使用了R包blogdown搭建个人博客，但是我和轩哥在使用的过程中发现一个小问题，有一些主题似乎并不能很好的被blogdown安装的hugo来应用，几番求解无果，暂时将这个问题搁置，因为太喜欢这个theme不想放弃，所以找了一种不用blogdown的方法去搭建，终于取得成果。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
